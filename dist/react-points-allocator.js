!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.PointsAllocator=t(require("react")):n.PointsAllocator=t(n.React)}(this,function(n){return function(n){function t(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return n[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var e={};return t.m=n,t.c=e,t.p="",t(0)}([function(n,t,e){"use strict";var r=e(1),o=e(2),i=e(4),s=e(5);i();var a=r.createClass({displayName:"PointsAllocator",propTypes:{points:r.PropTypes.number.isRequired,options:r.PropTypes.array.isRequired,rangesSize:r.PropTypes.number,initialRanges:r.PropTypes.array,onChange:r.PropTypes.func},componentWillMount:function(){this.props.rangesSize||(this.props.rangesSize=this.props.points)},getInitialState:function(){var n,t={};return this.props.initialRanges?(n=s(this.props.initialRanges),t.rangePoints=this.props.initialRanges,t.remainingPoints=this.props.points-n):(t.rangePoints=Array.from({length:this.props.options.length},function(){return 0}),t.remainingPoints=this.props.points),t},render:function(){return r.DOM.div({className:"points-allocator"},r.DOM.div({className:"points"},r.DOM.header({className:"points-text"},this.state.remainingPoints),r.DOM.progress({className:"points-progress",value:this.state.remainingPoints,max:this.props.points})),o({remainingPoints:this.state.remainingPoints,rangePoints:this.state.rangePoints,options:this.props.options,onChange:this._onRangeChange,maxPoints:this.props.rangesSize}))},_onRangeChange:function(n,t){var e=this.state;e.rangePoints[n]=t,e.remainingPoints=this.props.points-s(e.rangePoints),this.setState(e),this.props.onChange&&this.props.onChange(e)}});n.exports=a},function(t){t.exports=n},function(n,t,e){var r=e(1),o=e(3),i=r.createClass({displayName:"Allocator",propTypes:{options:r.PropTypes.array.isRequired,remainingPoints:r.PropTypes.number.isRequired,maxPoints:r.PropTypes.number.isRequired,rangePoints:r.PropTypes.array.isRequired,onChange:r.PropTypes.func},render:function(){var n=this.props.options.map(function(n,t){return o({option:n,remainingPoints:this.props.remainingPoints,onChange:this.props.onChange,maxPoints:this.props.maxPoints,points:this.props.rangePoints[t],key:t})}.bind(this));return r.DOM.ul({className:"allocator"},n)}});n.exports=i},function(n,t,e){var r=e(1),o=r.createClass({displayName:"Option",propTypes:{points:r.PropTypes.number,option:r.PropTypes.string.isRequired,remainingPoints:r.PropTypes.number,maxPoints:r.PropTypes.number.isRequired,onChange:r.PropTypes.func},render:function(){return r.DOM.li({className:"allocator-option"},r.DOM.header({className:"option-title"},this.props.option),r.DOM.span({className:"option-value"},this.props.points),r.DOM.input({className:"option-range",type:"range",min:"0",max:this.props.maxPoints,value:this.props.points,onChange:this._notifyChange}))},_notifyChange:function(n){var t=parseInt(n.currentTarget.value);t-this.props.points>this.props.remainingPoints&&(t=this.props.points+this.props.remainingPoints),this.props.onChange&&this.props.onChange(this.props.key,t)}});n.exports=o},function(n){var t=function(){Array.from||(Array.from=function(){var n=Object.prototype.toString,t=function(t){return"function"==typeof t||"[object Function]"===n.call(t)},e=function(n){var t=Number(n);return isNaN(t)?0:0!==t&&isFinite(t)?(t>0?1:-1)*Math.floor(Math.abs(t)):t},r=Math.pow(2,53)-1,o=function(n){var t=e(n);return Math.min(Math.max(t,0),r)};return function(n){var e=this,r=Object(n);if(null==n)throw new TypeError("Array.from requires an array-like object - not null or undefined");var i,s=arguments.length>1?arguments[1]:void 0;if("undefined"!=typeof s){if(!t(s))throw new TypeError("Array.from: when provided, the second argument must be a function");arguments.length>2&&(i=arguments[2])}for(var a,p=o(r.length),u=t(e)?Object(new e(p)):new Array(p),c=0;p>c;)a=r[c],u[c]=s?"undefined"==typeof i?s(a,c):s.call(i,a,c):a,c+=1;return u.length=p,u}}())};n.exports=t},function(n){var t=function(n){return n.reduce(function(n,t){return n+t},0)};n.exports=t}])});